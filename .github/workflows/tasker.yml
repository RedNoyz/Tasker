name: Build and Upload Release Asset

permissions:
  contents: write

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    runs-on: windows-latest

    steps:
      - name: 📥 Check out repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-use-pep517 -r requirements.txt
          pip install pyinstaller

      - name: 🔍 Extract version from utils/version.py
        id: get_version
        shell: python
        run: |
          import pathlib
          version_file = pathlib.Path("utils/version.py")
          scope = {}
          exec(version_file.read_text(), scope)
          print(f"::set-env name=version::{scope['__version__']}")

      - name: 🔎 Verify version matches GitHub Release tag
        run: |
          $expectedTag = "v${{ env.version }}"
          $actualTag = "${{ github.event.release.tag_name }}"
          echo "Expected tag: $expectedTag"
          echo "Actual tag:   $actualTag"
          if ($expectedTag -ne $actualTag) {
            Write-Error "Version mismatch: version.py is $expectedTag but GitHub release tag is $actualTag"
            exit 1
          }

      - name: 🔨 Build Tasker.exe
        run: pyinstaller Tasker.spec

      - name: 🔨 Build updater.exe
        run: pyinstaller --onefile updater.py

      - name: 📁 Rename Tasker.exe (if needed)
        run: |
          if (!(Test-Path -Path "dist/Tasker.exe")) {
            $exe = Get-ChildItem -Path dist -Filter *.exe | Where-Object { $_.Name -ne "updater.exe" } | Select-Object -First 1
            if ($exe) {
              Rename-Item -Path $exe.FullName -NewName "Tasker.exe"
            }
          }

      - name: 📦 Zip Tasker.exe and updater.exe
        run: |
          mkdir bundle
          Copy-Item "dist/Tasker.exe" -Destination bundle/
          Copy-Item "dist/updater.exe" -Destination bundle/
          Compress-Archive -Path bundle/* -DestinationPath dist/tasker.zip

      - name: 🚀 Upload Tasker.exe to GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            dist/Tasker.exe
            dist/update_bundle.zip
          name: Tasker-${{ env.version }}
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
